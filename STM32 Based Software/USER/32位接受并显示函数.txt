u32 necReceiveAllData[8];
u8 necReceiveAllBitCount=0;
u8 necReceiveContinusBitCount=0;
void recAllJudge(u16 time){
	if(necReceiveAllBitCount>=256)
		return;
	if(time>4300&&time<4700)
	{
		//necReceiveAllBitCount=0;
		//necReceiveContinusBitCount++;
	}
	else if(time>1500&&time<1900)
	{
		necReceiveAllData[necReceiveAllBitCount/32]<<=1;
		necReceiveAllData[necReceiveAllBitCount/32] |=1;
		necReceiveAllBitCount++;
	}
	else if(time>400&&time<700)
	{
		necReceiveAllData[necReceiveAllBitCount/32]<<=1;
		necReceiveAllData[necReceiveAllBitCount/32] |=0;
		necReceiveAllBitCount++;
	}
	else if(time>19000&&time<21000)
	{
		//necReceiveContinusBitCount++;
	}
	else
	{ 
		//necReceiveBitCount=0;
		//necReceiveContinusBitCount++;
	}
}
 
u32 getSendCode(u8 leng,u32 data){
	u32 dataTemp=data;
	u32 dataResult=0;
	u32 sendCode=0;
	u8 i;
	for(i=0;i<leng;i++){
		dataResult=dataResult<<1;
		if((dataTemp&0x0001)==0x0001)
			dataResult|=1;
		else
			dataResult|=0;
		dataTemp>>=1;
	}
	for(i=0;i<leng/8;i++){
		sendCode<<=8;
		sendCode|=dataResult&0x00ff;
		dataResult>>=8;
	}
	return sendCode;
}


u32 getNecReceiveData(void){
	if((necReceiveFlag&0x80) ==0x80 )
	{
		
		necReceiveData=getSendCode(necReceiveBitCount,necReceiveData);
		//³õÊ¼×´Ì¬±äÁ¿
		
		necReceiveFlag=0;
		necReceiveBitCount=0;
		return necReceiveData;
	}
	return 0;
} 
void getGetliSendCode(u32 *recData)
{
	u8 i=0,j=0;
	u32 dataTemp;
	printf("\r\n");
	for(i=0;i<134;i++){
		if(i%32==0)
		{
			dataTemp=recData[i/32];
		}
		if(j%8==0)
			printf("  ");
		if(i<128)
		{
			if(dataTemp&0x80000000)
				printf("%c",'1');
			else
				printf("%c",'0');
			dataTemp<<=1;
		}
		else{
			if(dataTemp&(1<<5))
				printf("%c",'1');
			else
				printf("%c",'0');
			dataTemp<<=1;
		}
		
		j++;	
		if(i==66)
		{	printf("\r\n");
			j=0;}
		
	}
//	for(i=0;i<67;i++){
//		if(i%32==0)
//		{
//			dataTemp=recData[i/32];
//		}
//		if(i%8==0)
//		printf("  ");
//		if(i<64)
//		{
//			if(dataTemp&0x80000000)
//				printf("%c",'1');
//			else
//				printf("%c",'0');
//			dataTemp<<=1;
//		}
//		else{
//			if(dataTemp&(1<<5))
//				printf("%c",'1');
//			else
//				printf("%c",'0');
//			dataTemp<<=1;
//		}
//	}
	printf("\r\n");
}
void getAllNecReceiveData(void){
	u8 i;
	getGetliSendCode(necReceiveAllData);
	necReceiveAllBitCount=0;
	necReceiveContinusBitCount=0;
	for(i=0;i<8;i++){
		necReceiveAllData[i]=0;
	}
	
}